{
  "openapi": "3.0.0",
  "info": {
    "title": "Professor Allocation",
    "version": "1.0.0",
    "description": ""
  },
  "servers": [
    {
      "url": "http://localhost:7000"
    }
  ],
  "paths": {
    "/courses": {
      "post": {
        "tags": [
          "Course"
        ],
        "description": "Creates a course",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseCreateResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseRequest"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Course"
        ],
        "description": "Finds all courses or finds courses that contains a name if a query parameter name is defined",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "example": "Licenciatura em Física",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseListResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Course"
        ],
        "description": "Deletes all courses or deletes courses by its ids if a comma separated id list is provided",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "",
            "example": "1,2,3",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/courses/{courseId}": {
      "get": {
        "tags": [
          "Course"
        ],
        "description": "Finds a course by its id",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Course"
        ],
        "description": "Updates a course",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseRequest"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Course"
        ],
        "description": "Deletes a course by its id",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          }
        }
      }
    },
    "/departments": {
      "post": {
        "tags": [
          "Department"
        ],
        "description": "Creates a department",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentCreateResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Department"
        ],
        "description": "Finds all departments or finds departments that contains a name if a query parameter name is defined",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "example": "ciências humanas",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentListResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Department"
        ],
        "description": "Deletes all departments or deletes departments by its ids if a comma separated id list is provided",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "",
            "example": "1,2,3",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/departments/{departmentId}": {
      "get": {
        "tags": [
          "Department"
        ],
        "description": "Finds a department by its id",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Department"
        ],
        "description": "Updates a department by its id",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Department"
        ],
        "description": "Deletes a department by its id",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          }
        }
      }
    },
    "/professors": {
      "post": {
        "tags": [
          "Professor"
        ],
        "description": "Creates a professor",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessorCreateResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfessorRequest"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Professor"
        ],
        "description": "Finds all professors or professors by name if a query parameter name is defined",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "example": "Paulo Menezes",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "Id do departamento",
            "example": "1",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessorListResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Professor"
        ],
        "description": "Deletes all professors or deletes professors by its ids if a comma separated id list is provided",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "",
            "example": "1,2,3",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/professors/department/{departmentId}": {
      "get": {
        "tags": [
          "Professor"
        ],
        "description": "Finds professors by department id",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessorListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/professors/{professorId}": {
      "get": {
        "tags": [
          "Professor"
        ],
        "description": "Finds a professor by its id",
        "parameters": [
          {
            "name": "professorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Professor"
        ],
        "description": "Updates a professor",
        "parameters": [
          {
            "name": "professorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfessorResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfessorUpdateRequest"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Professor"
        ],
        "description": "Deletes a professor by its id",
        "parameters": [
          {
            "name": "professorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          }
        }
      }
    },
    "/allocations": {
      "post": {
        "tags": [
          "Allocation"
        ],
        "description": "Creates an allocation",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationResponse"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllocationRequest"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Allocation"
        ],
        "description": "Finds all allocations",
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "description": "",
            "example": "1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "startHour",
            "in": "query",
            "description": "",
            "example": "08:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endHour",
            "in": "query",
            "description": "",
            "example": "10:00",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "courseId",
            "in": "query",
            "description": "",
            "example": "1",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "professorId",
            "in": "query",
            "description": "",
            "example": "1",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationListResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Allocation"
        ],
        "description": "Deletes all allocations or deletes allocations by its ids if a comma separated id list is provided",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "",
            "example": "1,2,3",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/allocations/course/{courseId}": {
      "get": {
        "tags": [
          "Allocation"
        ],
        "description": "Finds allocations by course id",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/professor/{professorId}": {
      "get": {
        "tags": [
          "Allocation"
        ],
        "description": "Finds allocations by professor id",
        "parameters": [
          {
            "name": "professorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/allocations/{allocationId}": {
      "get": {
        "tags": [
          "Allocation"
        ],
        "description": "Finds an allocation by its id",
        "parameters": [
          {
            "name": "allocationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Allocation"
        ],
        "description": "Updates an allocation",
        "parameters": [
          {
            "name": "allocationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllocationResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllocationUpdateRequest"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Allocation"
        ],
        "description": "Deletes an allocation by its id",
        "parameters": [
          {
            "name": "allocationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CourseRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Engenharia da Computação"
          },
          "description": {
            "type": "string",
            "example": "O curso de Engenharia da Computação forma profissionais para elaborar sistemas que envolvam o uso do computador em conjunto com sistemas de controle, comunicações ou hardware"
          }
        },
        "required": [
          "name"
        ]
      },
      "CourseCreateResponse": {
        "type": "object",
        "properties": {
          "course": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Engenharia da Computação"
              },
              "description": {
                "type": "string",
                "example": "O curso de Engenharia da Computação forma profissionais para elaborar sistemas que envolvam o uso do computador em conjunto com sistemas de controle, comunicações ou hardware"
              },
              "createdAt": {
                "type": "string",
                "example": "2025-04-07 04:31:14"
              },
              "updatedAt": {
                "type": "string",
                "example": "2025-04-07 04:33:50"
              }
            }
          }
        }
      },
      "CourseResponse": {
        "type": "object",
        "properties": {
          "course": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Engenharia da Computação"
              },
              "description": {
                "type": "string",
                "example": "O curso de Engenharia da Computação forma profissionais para elaborar sistemas que envolvam o uso do computador em conjunto com sistemas de controle, comunicações ou hardware"
              },
              "createdAt": {
                "type": "string",
                "example": "2025-04-07 04:31:14"
              },
              "updatedAt": {
                "type": "string",
                "example": "2025-04-07 04:33:50"
              }
            }
          }
        }
      },
      "CourseListResponse": {
        "type": "object",
        "properties": {
          "courses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Engenharia da Computação"
                },
                "description": {
                  "type": "string",
                  "example": "O curso de Engenharia da Computação forma profissionais para elaborar sistemas que envolvam o uso do computador em conjunto com sistemas de controle, comunicações ou hardware"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2025-04-07 04:31:14"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2025-04-07 04:33:50"
                }
              }
            }
          }
        }
      },
      "DepartmentRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Engenharias"
          },
          "description": {
            "type": "string",
            "example": ""
          }
        },
        "required": [
          "name"
        ]
      },
      "DepartmentCreateResponse": {
        "type": "object",
        "properties": {
          "department": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Engenharias"
              },
              "description": {
                "type": "string",
                "example": ""
              },
              "createdAt": {
                "type": "string",
                "example": "2025-04-07 04:31:14"
              },
              "updatedAt": {
                "type": "string",
                "example": "2025-04-07 04:33:50"
              }
            }
          }
        }
      },
      "DepartmentResponse": {
        "type": "object",
        "properties": {
          "department": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Engenharias"
              },
              "description": {
                "type": "string",
                "example": ""
              },
              "createdAt": {
                "type": "string",
                "example": "2025-04-07 04:31:14"
              },
              "updatedAt": {
                "type": "string",
                "example": "2025-04-07 04:33:50"
              }
            }
          }
        }
      },
      "DepartmentListResponse": {
        "type": "object",
        "properties": {
          "departments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Engenharias"
                },
                "description": {
                  "type": "string",
                  "example": ""
                },
                "createdAt": {
                  "type": "string",
                  "example": "2025-04-07 04:31:14"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2025-04-07 04:33:50"
                }
              }
            }
          }
        }
      },
      "ProfessorRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Paulo Fernandes"
          },
          "cpf": {
            "type": "string",
            "example": "73902748087"
          },
          "departmentId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "name",
          "cpf",
          "departmentId"
        ]
      },
      "ProfessorUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Paulo Fernandes"
          },
          "cpf": {
            "type": "string",
            "example": "73902748087"
          },
          "departmentId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "ProfessorCreateResponse": {
        "type": "object",
        "properties": {
          "professor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Paulo Fernandes"
              },
              "cpf": {
                "type": "string",
                "example": "73902748087"
              },
              "department": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Engenharias"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-04-07 04:31:14"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2025-04-07 04:33:50"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "example": "2025-04-07 04:31:14"
              },
              "updatedAt": {
                "type": "string",
                "example": "2025-04-07 04:33:50"
              }
            }
          }
        }
      },
      "ProfessorResponse": {
        "type": "object",
        "properties": {
          "professor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "name": {
                "type": "string",
                "example": "Paulo Fernandes"
              },
              "cpf": {
                "type": "string",
                "example": "73902748087"
              },
              "department": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Engenharias"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-04-07 04:31:14"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2025-04-07 04:33:50"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "example": "2025-04-07 04:31:14"
              },
              "updatedAt": {
                "type": "string",
                "example": "2025-04-07 04:33:50"
              }
            }
          }
        }
      },
      "ProfessorListResponse": {
        "type": "object",
        "properties": {
          "professors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Paulo Fernandes"
                },
                "cpf": {
                  "type": "string",
                  "example": "73902748087"
                },
                "department": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Engenharias"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-04-07 04:31:14"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-04-07 04:33:50"
                    }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "example": "2025-04-07 04:31:14"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2025-04-07 04:33:50"
                }
              }
            }
          }
        }
      },
      "AllocationRequest": {
        "type": "object",
        "properties": {
          "day": {
            "type": "number",
            "example": 1
          },
          "startHour": {
            "type": "string",
            "example": "08:00"
          },
          "endHour": {
            "type": "string",
            "example": "10:00"
          },
          "courseId": {
            "type": "number",
            "example": 1
          },
          "professorId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "day",
          "startHour",
          "endHour",
          "courseId",
          "professorId"
        ]
      },
      "AllocationUpdateRequest": {
        "type": "object",
        "properties": {
          "day": {
            "type": "number",
            "example": 1
          },
          "startHour": {
            "type": "string",
            "example": "08:00"
          },
          "endHour": {
            "type": "string",
            "example": "10:00"
          },
          "courseId": {
            "type": "number",
            "example": 1
          },
          "professorId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "AllocationResponse": {
        "type": "object",
        "properties": {
          "allocation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "day": {
                "type": "number",
                "example": 1
              },
              "startHour": {
                "type": "string",
                "example": "08:00"
              },
              "endHour": {
                "type": "string",
                "example": "10:00"
              },
              "course": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Engenharia de Software"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-04-07 04:31:14"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2025-04-07 04:33:50"
                  }
                }
              },
              "professor": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Paulo Fernandes"
                  },
                  "cpf": {
                    "type": "string",
                    "example": "73902748087"
                  },
                  "departmentId": {
                    "type": "number",
                    "example": 1
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-04-07 04:31:14"
                  },
                  "updatedAt": {
                    "type": "string",
                    "example": "2025-04-07 04:33:50"
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "example": "2025-04-07 04:31:14"
              },
              "updatedAt": {
                "type": "string",
                "example": "2025-04-07 04:33:50"
              }
            }
          }
        }
      },
      "AllocationListResponse": {
        "type": "object",
        "properties": {
          "allocations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "day": {
                  "type": "number",
                  "example": 1
                },
                "startHour": {
                  "type": "string",
                  "example": "08:00"
                },
                "endHour": {
                  "type": "string",
                  "example": "10:00"
                },
                "course": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Engenharia de Software"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-04-07 04:31:14"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-04-07 04:33:50"
                    }
                  }
                },
                "professor": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Paulo Fernandes"
                    },
                    "cpf": {
                      "type": "string",
                      "example": "73902748087"
                    },
                    "departmentId": {
                      "type": "number",
                      "example": 1
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-04-07 04:31:14"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2025-04-07 04:33:50"
                    }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "example": "2025-04-07 04:31:14"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2025-04-07 04:33:50"
                }
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "\nInvalid `prisma.course.create()` invocation:\n\n\nUnique constraint failed on the constraint: `courses_name_key`"
          },
          "details": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "P2002"
              },
              "meta": {
                "type": "object",
                "properties": {
                  "modelName": {
                    "type": "string",
                    "example": "Course"
                  },
                  "target": {
                    "type": "string",
                    "example": "courses_name_key"
                  }
                }
              },
              "clientVersion": {
                "type": "string",
                "example": "6.7.0"
              },
              "name": {
                "type": "string",
                "example": "PrismaClientKnownRequestError"
              }
            }
          }
        }
      }
    }
  }
}